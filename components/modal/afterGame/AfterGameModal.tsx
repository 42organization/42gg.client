import { useEffect, useState } from 'react';
import instance from 'utils/axios';
import { PlayerInfo, CurrentGameInfo, GameResult } from 'types/scoreTypes';
import { useSetRecoilState } from 'recoil';
import { modalState } from 'utils/recoil/modal';
import { errorState } from 'utils/recoil/error';
import { minuitesAgo } from 'utils/handleTime';
import NormalGameModal from './NormalGameModal';
import RankGameModal from './RankGameModal';

const defaultPlayersInfo: PlayerInfo[] = [{ intraId: '', userImageUri: '' }];
const defaultCurrentGameInfo: CurrentGameInfo = {
  mode: 'normal',
  startTime: '1970-01-01 00:00',
  matchTeamsInfo: {
    myTeam: defaultPlayersInfo,
    enemyTeam: defaultPlayersInfo,
  },
};

export default function AfterGameModal() {
  const setErrorMessage = useSetRecoilState(errorState);
  const setModalInfo = useSetRecoilState(modalState);
  const [currentGameInfo, setCurrentGameInfo] = useState<CurrentGameInfo>(
    defaultCurrentGameInfo
  );
  const normalGuide = {
    before: 'Ï¶êÍ±∞Ïö¥ Í≤ΩÍ∏∞ ÌïòÏÖ®ÎÇòÏöî?',
    after: 'Í≤ΩÍ∏∞ Ï§ë',
    explains: ['üí° Í≤ΩÍ∏∞ÏãúÏûë 10Î∂Ñ ÌõÑÎ∂ÄÌÑ∞ ', 'üí° Í≤ΩÍ∏∞Î•º ÏôÑÎ£åÌï† Ïàò ÏûàÏäµÎãàÎã§'],
  };
  const rankGuide = {
    before: 'Í≤ΩÍ∏∞ Í≤∞Í≥º ÌôïÏù∏',
    after: 'Í≤ΩÍ∏∞ ÌõÑ Ï†êÏàòÎ•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî',
    explains: ['üí° 3Ìåê 2ÏÑ†ÏäπÏ†ú!', 'üí° ÎèôÏ†êÏùÄ 1Ï†ê ÎÇ¥Í∏∞Î°ú ÏäπÎ∂ÄÎ•º Í≤∞Ï†ï!'],
  };

  useEffect(() => {
    getCurrentGameInfoHandler();
  }, []);

  const getCurrentGameInfoHandler = async () => {
    try {
      const res = await instance.get(`/pingpong/games/result`);
      setCurrentGameInfo({
        mode: 'rank',
        startTime: minuitesAgo(10),
        matchTeamsInfo: { ...res?.data },
      }); // ÏûÑÏãú
    } catch (e) {
      setErrorMessage('JH03');
    }
  };

  const submitRankResultHandler = async (result: GameResult) => {
    try {
      const res = await instance.post(`/pingpong/games/result`, result);
      if (res?.status === 201) {
        alert('Í≤∞Í≥º ÏûÖÎ†•Ïù¥ ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§.');
        setModalInfo({ modalName: null });
      } else if (res?.status === 202) {
        alert('ÏÉÅÎåÄÍ∞Ä Ïù¥ÎØ∏ Ï†êÏàòÎ•º ÏûÖÎ†•ÌñàÏäµÎãàÎã§.');
        setModalInfo({ modalName: null });
      }
    } catch (e) {
      setErrorMessage('JH04');
      return;
    }
    window.location.href = '/';
  };

  const submitNormalResultHandler = async () => {
    try {
      await instance.post(`/pingpong/games/result/normal`);
      alert('Í≤åÏûÑÏù¥ Ï¢ÖÎ£åÎêòÏóàÏäµÎãàÎã§.');
      setModalInfo({ modalName: null });
    } catch (e) {
      setErrorMessage('JH04');
      return;
    }
    window.location.href = '/';
  };

  return currentGameInfo.mode === 'normal' ? (
    <NormalGameModal
      currentGameInfo={currentGameInfo}
      guideLine={normalGuide}
      onSubmit={submitNormalResultHandler}
    />
  ) : (
    <RankGameModal
      currentGameInfo={currentGameInfo}
      guideLine={rankGuide}
      onSubmit={submitRankResultHandler}
    />
  );
}
